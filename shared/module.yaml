product:
  type: lib
  platforms: [jvm, android, iosSimulatorArm64]

dependencies:
  - $compose.foundation
  - $compose.material3

dependencies@jvm:
  - $compose.desktop.currentOs

settings:
  compose:
    enabled: true
#    commonMain.dependencies {
#            implementation(libs.findLibrary("kotlinx.coroutines.core").get())
#        }
#
#        androidMain.dependencies {
#            runtimeOnly(libs.findLibrary("kotlinx.coroutines.android").get())
#//            coreLibraryDesugaring(libs.findLibrary("android.desugarJdkLibs").get())
#        }
#
#        named("desktopMain").dependencies {
#            runtimeOnly(libs.findLibrary("kotlinx.coroutines.swing").get())
#        }
#sourceSets.apply {
#                        commonMain.dependencies {
#                            implementation(libs.findLibrary("koin.compose").get())
#                            implementation(libs.findLibrary("koin.compose.viewmodel").get())
#                            api(libs.findLibrary("koin.annotations").get())
#//                        implementation(libs.findLibrary("koin.compose.viewmodel.navigation").get())
#                        }
#                        androidMain.dependencies {
#                            implementation(libs.findLibrary("koin.android").get())
#                        }
#                    }
#                }
#            }
#
#            dependencies.apply {
#                kspTargets.forEach {
#                    add(it, libs.findLibrary("koin.ksp.compiler").get())
#                }
#            }
#
#            extensions.configure<KspExtension> {
#                arg("KOIN_CONFIG_CHECK","true")
#                arg("KOIN_USE_COMPOSE_VIEWMODEL","true")
#            }

#implementation(libs.findLibrary("androidx.lifecycle.viewmodel.compose").get())
#            implementation(libs.findLibrary("androidx.lifecycle.runtime.compose").get())
#            implementation(compose.material3)
#            implementation(compose.materialIconsExtended)
#        }
#
#        named("desktopMain").dependencies{
#            implementation(compose.desktop.currentOs)
#        }
#
#        androidMain.dependencies {
#            implementation(compose.preview)
#            implementation(libs.findLibrary("androidx.activity.compose").get())
#        }